name: CI

on:
  pull_request:
  push:
    branches:
      - main    

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn package --file posthog/pom.xml -DskipTests -Dgpg.skip=true -Dmaven.javadoc.skip=true --batch-mode --show-version

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: posthog-java
          path: posthog/target/posthog-*.jar

  run_tests:
    name: Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: posthog-java
          path: posthog/target

      - name: Run tests
        run: mvn test --file posthog/pom.xml --batch-mode --show-version

  release:
    name: Release to Maven Central
    runs-on: ubuntu-latest
    needs: run_tests

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'adopt'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: posthog-java
          path: posthog/target

      - name: Release to Maven Central
        # Only actually release if we are on the main branch, otherwise do a dry run
        run: mvn deploy --file posthog/pom.xml -DskipTests -Dgpg.skip=true -Dmaven.javadoc.skip=true --batch-mode --show-version -Prelease -DdryRun=${{ github.ref != 'refs/heads/main' }}
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
