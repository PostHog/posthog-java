name: CI

on:
  pull_request:
  push:
    branches:
      - main    

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn package --file posthog/pom.xml -DskipTests -Dgpg.skip=true -Dmaven.javadoc.skip=true -B -V

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: posthog-java
          path: posthog/target/posthog-java-*.jar

  run_tests:
    name: Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: posthog-java
          path: posthog/target

      - name: Run tests
        run: mvn test --file posthog/pom.xml -B -V

  release:
    name: Release to Maven Central
    runs-on: ubuntu-latest
    needs: run_tests

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: posthog-java
          path: posthog/target

      - name: Release to Maven Central
        run: mvn deploy --file posthog/pom.xml -DskipTests -Dgpg.skip=true -Dmaven.javadoc.skip=true -B -V
        env:
          GPG_KEY_NAME: ${{ secrets.GPG_KEY_NAME }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          OSSRH_JIRA_USERNAME: ${{ secrets.OSSRH_JIRA_USERNAME }}
          OSSRH_JIRA_PASSWORD: ${{ secrets.OSSRH_JIRA_PASSWORD }}
          OSSRH_STAGING_PROFILE_ID: ${{ secrets.OSSRH_STAGING_PROFILE_ID }}
          OSSRH_STAGING_REPOSITORY_ID: ${{ secrets.OSSRH_STAGING_REPOSITORY_ID }}
          OSSRH_STAGING_REPOSITORY_URL: ${{ secrets.OSSRH_STAGING_REPOSITORY_URL }}
          OSSRH_STAGING_REPOSITORY_USERNAME: ${{ secrets.OSSRH_STAGING_REPOSITORY_USERNAME }}
          OSSRH_STAGING_REPOSITORY_PASSWORD: ${{ secrets.OSSRH_STAGING_REPOSITORY_PASSWORD }}
